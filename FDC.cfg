[gcode_macro _FDC]
variable_z_height_temps: {27.5: 0.00017988186742920093, 27.6: -0.00010895239307166209, 27.7: -0.00010718010117000326, 27.8: -0.00010543172357808348, 27.9: -0.00010370706690347582, 28.0: -0.0001020059383733937, 28.1: -0.00010032814583469144, 28.2: -9.86734977538636e-05, 28.3: -9.704180321704547e-05, 28.4: -9.54328719300129e-05, 28.5: -9.384651421818211e-05, 28.6: -9.228254102661062e-05, 28.7: -9.074076391999536e-05, 28.8: -8.9220995082675e-05, 28.9: -8.772304731862759e-05, 29.0: -8.624673405147314e-05, 29.1: -8.479186932447099e-05, 29.2: -8.335826780052173e-05, 29.3: -8.194574476216615e-05, 29.4: -8.055411611158588e-05, 29.5: -7.918319837060361e-05, 29.6: -7.783280868068135e-05, 29.7: -7.650276480292194e-05, 29.8: -7.519288511807125e-05, 29.9: -7.390298862651099e-05, 30.0: -7.263289494826783e-05, 30.1: -7.138242432300776e-05, 30.2: -7.015139761003481e-05, 30.3: -6.893963628829772e-05, 30.4: -6.774696245638286e-05, 30.5: -6.657319883251848e-05, 30.6: -6.541816875457263e-05, 30.7: -6.428169618005438e-05, 30.8: -6.316360568611344e-05, 30.9: -6.206372246953971e-05, 31.0: -6.098187234676372e-05, 31.1: -5.9917881753857906e-05, 31.2: -5.887157774653274e-05, 31.3: -5.7842788000141056e-05, 31.4: -5.6831340809676296e-05, 31.5: -5.5837065089770366e-05, 31.6: -5.4859790374701e-05, 31.7: -5.389934681837875e-05, 31.8: -5.295556519436173e-05, 31.9: -5.202827689584433e-05, 32.0: -5.1117313935664186e-05, 32.1: -5.022250894629564e-05, 32.2: -4.934369517986103e-05, 32.3: -4.8480706508112915e-05, 32.4: -4.7633377422454885e-05, 32.5: -4.680154303392291e-05, 32.6: -4.598503907319706e-05, 32.7: -4.518370189060105e-05, 32.8: -4.439736845609143e-05, 32.9: -4.362587635927274e-05, 33.0: -4.286906380938623e-05, 33.1: -4.212676963531465e-05, 33.2: -4.1398833285580076e-05, 33.3: -4.068509482835041e-05, 33.4: -3.9985394951424624e-05, 33.5: -3.929957496224927e-05, 33.6: -3.862747678791412e-05, 33.7: -3.7968942975140016e-05, 33.8: -3.7323816690296684e-05, 33.9: -3.6691941719389255e-05, 34.0: -3.6073162468068694e-05, 34.1: -3.546732396161878e-05, 34.2: -3.4874271844974325e-05, 34.3: -3.4293852382701225e-05, 34.4: -3.37259124590086e-05, 34.5: -3.317029957774966e-05, 34.6: -3.262686186241391e-05, 34.7: -3.209544805613668e-05, 34.8: -3.1575907521686104e-05, 34.9: -3.10680902414753e-05, 35.0: -3.057184681756406e-05, 35.1: -3.0087028471638064e-05, 35.2: -2.961348704503576e-05, 35.3: -2.9151074998734483e-05, 35.4: -2.8699645413347852e-05, 35.5: -2.825905198913098e-05, 35.6: -2.7829149045984804e-05, 35.7: -2.740979152344395e-05, 35.8: -2.700083498068627e-05, 35.9: -2.66021355965311e-05, 36.0: -2.6213550169439277e-05, 36.1: -2.583493611750965e-05, 36.2: -2.5466151478482565e-05, 36.3: -2.5107054909737254e-05, 36.4: -2.4757505688297043e-05, 36.5: -2.441736371082675e-05, 36.6: -2.4086489493623138e-05, 36.7: -2.376474417263401e-05, 36.8: -2.345198950344171e-05, 36.9: -2.314808786126922e-05, 37.0: -2.285290224098794e-05, 37.1: -2.2566296257094283e-05, 37.2: -2.22881341437383e-05, 37.3: -2.201828075471153e-05, 37.4: -2.1756601563433994e-05, 37.5: -2.1502962662976743e-05, 37.6: -2.1257230766047117e-05, 37.7: -2.1019273204996546e-05, 37.8: -2.078895793181275e-05, 37.9: -2.0566153518125803e-05, 38.0: -2.0350729155208143e-05, 38.1: -2.0142554653966756e-05, 38.2: -1.9941500444957926e-05, 38.3: -1.9747437578374223e-05, 38.4: -1.9560237724045373e-05, 38.5: -1.937977317144693e-05, 38.6: -1.920591682969333e-05, 38.7: -1.9038542227537043e-05, 38.8: -1.8877523513376356e-05, 38.9: -1.872273545524758e-05, 39.0: -1.8574053440819846e-05, 39.1: -1.8431353477425458e-05, 39.2: -1.8294512192000914e-05, 39.3: -1.8163406831163235e-05, 39.4: -1.803791526113971e-05, 39.5: -1.791791596781559e-05, 39.6: -1.7803288056710692e-05, 39.7: -1.7693911252979373e-05, 39.8: -1.7589665901427895e-05, 39.9: -1.7490432966497937e-05, 40.0: -1.739609403227007e-05, 40.1: -1.730653130246635e-05, 40.2: -1.72216276004512e-05, 40.3: -1.714126636923139e-05, 40.4: -1.7065331671444785e-05, 40.5: -1.699370818938027e-05, 40.6: -1.692628122496216e-05, 40.7: -1.686293669976406e-05, 40.8: -1.680356115497765e-05, 40.9: -1.6748041751466457e-05, 41.0: -1.669626626970514e-05, 41.1: -1.6648123109826336e-05, 41.2: -1.6603501291607634e-05, 41.3: -1.6562290454445565e-05, 41.4: -1.6524380857397235e-05, 41.5: -1.6489663379153432e-05, 41.6: -1.6458029518046438e-05, 41.7: -1.6429371392038747e-05, 41.8: -1.640358173875863e-05, 41.9: -1.638055391544463e-05, 42.0: -1.6360181898998453e-05, 42.1: -1.6342360285951166e-05, 42.2: -1.6326984292479654e-05, 42.3: -1.6313949754396227e-05, 42.4: -1.6303153127160755e-05, 42.5: -1.6294491485865058e-05, 42.6: -1.628786252524852e-05, 42.7: -1.628316455968941e-05, 42.8: -1.6280296523208358e-05, 42.9: -1.627915796945708e-05, 43.0: -1.6279649071739184e-05, 43.1: -1.628167062299457e-05, 43.2: -1.6285124035802026e-05, 43.3: -1.6289911342388767e-05, 43.4: -1.6295935194603553e-05, 43.5: -1.630309886396352e-05, 43.6: -1.6311306241598676e-05, 43.7: -1.63204618383022e-05, 43.8: -1.6330470784491416e-05, 43.9: -1.6341238830235548e-05, 44.0: -1.63526723452323e-05, 44.1: -1.636467831883648e-05, 44.2: -1.637716436002877e-05, 44.3: -1.6390038697433086e-05, 44.4: -1.640321017932784e-05, 44.5: -1.6416588273607778e-05, 44.6: -1.6430083067831697e-05, 44.7: -1.644360526917993e-05, 44.8: -1.6457066204492513e-05, 44.9: -1.647037782022496e-05, 45.0: -1.6483452682501155e-05, 45.1: -1.6496203977071737e-05, 45.2: -1.6508545509317553e-05, 45.3: -1.652039170428176e-05, 45.4: -1.653165760663166e-05, 45.5: -1.654225888068732e-05, 45.6: -1.655211181039208e-05, 45.7: -1.656113329935073e-05, 45.8: -1.6569240870798266e-05, 45.9: -1.6576352667605106e-05, 46.0: -1.658238745228663e-05, 46.1: -1.6587264607002307e-05, 46.2: -1.6590904133555705e-05, 46.3: -1.6593226653378867e-05, 46.4: -1.6594095918069478e-05, 46.5: -1.6593663746271997e-05, 46.6: -1.6591507681460935e-05, 46.7: -1.6587780781559397e-05, 46.8: -1.6582349276725826e-05, 46.9: -1.657513750624902e-05, 47.0: -1.6566070429041915e-05, 47.1: -1.6555073623669356e-05, 47.2: -1.654207328834461e-05, 47.3: -1.6526996240899018e-05, 47.4: -1.6509769918819292e-05, 47.5: -1.6490322379242306e-05, 47.6: -1.6468582298914333e-05, 47.7: -1.6444478974256965e-05, 47.8: -1.6417942321309865e-05, 47.9: -1.6388902875758525e-05, 48.0: -1.6357291792939467e-05, 48.1: -1.6323040847816828e-05, 48.2: -1.62860824349971e-05, 48.3: -1.6246349568726538e-05, 48.4: -1.6203775882906758e-05, 48.5: -1.6158295631063524e-05, 48.6: -1.6109843686358018e-05, 48.7: -1.6058355541621536e-05, 48.8: -1.6003767309293038e-05, 48.9: -1.5946015721459914e-05, 49.0: -1.5885038129874463e-05, 49.1: -1.582077250589925e-05, 49.2: -1.5753157440544403e-05, 49.3: -1.5682132144474552e-05, 49.4: -1.5607636447981937e-05, 49.5: -1.5529610801007232e-05, 49.6: -1.544799627311872e-05, 49.7: -1.5362734553546996e-05, 49.8: -1.5273767951130314e-05, 49.9: -1.5181039394390923e-05, 50.0: -1.5084492431447459e-05, 50.1: -1.4984071230097346e-05, 50.2: -1.4879720577740466e-05, 50.3: -1.4771385881458092e-05, 50.4: -1.4659013167945233e-05, 50.5: -1.4542549083540988e-05, 50.6: -1.442194089422942e-05, 50.7: -1.4297136485634347e-05, 50.8: -1.4168084363018474e-05, 50.9: -1.4034733651291202e-05, 51.0: -1.3897034094980006e-05, 51.1: -1.3754936058305023e-05, 51.2: -1.3608390525063699e-05, 51.3: -1.3457349098720123e-05, 51.4: -1.3301764002405896e-05, 51.5: -1.31415880788412e-05, 51.6: -1.297677479044669e-05, 51.7: -1.2807278219215124e-05, 51.8: -1.2633053066842329e-05, 51.9: -1.2454054654639606e-05, 52.0: -1.2270238923530255e-05, 52.1: -1.2081562434133712e-05, 52.2: -1.1887982366677076e-05, 52.3: -1.1689456521013324e-05, 52.4: -1.1485943316679424e-05, 52.5: -1.1277401792821745e-05, 52.6: -1.1063791608227277e-05, 52.7: -1.0845073041342718e-05, 52.8: -1.0621206990225895e-05, 52.9: -1.0392154972609091e-05, 53.0: -1.0157879125850464e-05, 53.1: -9.918342206913233e-06, 53.2: -9.673507592492317e-06, 53.3: -9.423339278814835e-06, 53.4: -9.167801881825727e-06, 53.5: -8.906860637085401e-06, 53.6: -8.64048139977841e-06, 53.7: -8.368630644760289e-06, 53.8: -8.091275466491632e-06, 53.9: -7.80838357911616e-06, 54.0: -7.519923316393062e-06, 54.1: -7.225863631707408e-06, 54.2: -6.9261740981204495e-06, 54.3: -6.620824908314116e-06, 54.4: -6.3097868746100905e-06, 54.5: -5.993031428971549e-06, 54.6: -5.670530622989278e-06, 54.7: -5.3422571279476e-06, 54.8: -5.008184234685589e-06, 54.9: -4.668285853784426e-06, 55.0: -4.322536515369638e-06, 55.1: -3.970911369263752e-06, 55.2: -3.613386184911707e-06, 55.3: -3.2499373514068702e-06, 55.4: -2.880541877489304e-06, 55.5: -2.5051773915266834e-06, 55.6: -2.123822141493481e-06, 55.7: -1.736454995102804e-06, 55.8: -1.3430554395947591e-06, 55.9: -9.436035819290062e-07, 56.0: -5.380801486910836e-07, 56.1: -1.2646648605250943e-07, 56.2: 2.912554400921752e-07, 56.3: 7.151030442572454e-07, 56.4: 1.1450931213206894e-06, 56.5: 1.5812418465016576e-06, 56.6: 2.0235647753639313e-06, 56.7: 2.4720768438697e-06, 56.8: 2.9267923683309882e-06, 56.9: 3.3877250453645535e-06, 57.0: 3.854887952037603e-06, 57.1: 4.328293545696055e-06, 57.2: 4.807953664132808e-06, 57.3: 5.2938795253674314e-06, 57.4: 5.786081727927189e-06, 57.5: 6.284570250586832e-06, 57.6: 6.789354452533397e-06, 57.7: 7.300443073343654e-06, 57.8: 7.817844232869617e-06, 57.9: 8.341565431342624e-06, 58.0: 8.871613549454871e-06, 58.1: 9.407994848121756e-06, 58.2: 9.95071496868484e-06, 58.3: 1.0499778932852866e-05, 58.4: 1.1055191142680942e-05, 58.5: 1.1616955380547994e-05, 58.6: 1.2185074809282527e-05, 58.7: 1.2759551971963136e-05, 58.8: 1.3340388792099783e-05, 58.9: 1.392758657352798e-05, 59.0: 1.4521146000511138e-05, 59.1: 1.5121067137537601e-05, 59.2: 1.5727349429589532e-05, 59.3: 1.633999170194602e-05, 59.4: 1.695899216023946e-05, 59.5: 1.7584348390483305e-05, 59.6: 1.8216057359066e-05, 59.7: 1.885411541267725e-05, 59.8: 1.949851827839997e-05, 59.9: 2.0149261063704196e-05, 60.0: 2.080633825642282e-05, 60.1: 2.1469743724631014e-05, 60.2: 2.2139470716894295e-05, 60.3: 2.2815511862154907e-05, 60.4: 2.3497859169557475e-05, 60.5: 2.418650402873524e-05, 60.6: 2.4881437209692964e-05, 60.7: 2.5582648862697635e-05, 60.8: 2.6290128518434604e-05, 60.9: 2.7003865087975483e-05, 61.0: 2.7723846862667996e-05, 61.1: 2.845006151431899e-05, 61.2: 2.9182496095019224e-05, 61.3: 2.992113703725527e-05, 61.4: 3.0665970153824496e-05, 61.5: 3.141698063796345e-05, 61.6: 3.2174153063264585e-05, 61.7: 3.293747138352881e-05, 61.8: 3.3706918933127175e-05, 61.9: 3.448247842664353e-05, 62.0: 3.526413195910783e-05, 62.1: 3.605186100582355e-05, 62.2: 3.68456464225524e-05, 62.3: 3.764546844530793e-05, 62.4: 3.845130669057409e-05, 62.5: 3.926314015514215e-05, 62.6: 4.0080947216086446e-05, 62.7: 4.09047056309543e-05, 62.8: 4.173439253769926e-05, 62.9: 4.256998445443822e-05, 63.0: 4.3411457279728116e-05, 63.1: 4.4258786292674344e-05, 63.2: 4.511194615242856e-05, 63.3: 4.597091089873339e-05, 63.4: 4.6835653951591075e-05, 63.5: 4.7706148111371915e-05, 63.6: 4.858236555884982e-05, 63.7: 4.9464277855115583e-05, 63.8: 5.035185594160375e-05, 63.9: 5.1245070140192375e-05, 64.0: 5.2143890152974055e-05, 64.1: 5.304828506261412e-05, 64.2: 5.395822333188142e-05, 64.3: 5.487367280411319e-05, 64.4: 5.5794600702932344e-05, 64.5: 5.6720973632251766e-05, 64.6: 5.7652757576470356e-05, 64.7: 5.858991790027614e-05, 64.8: 5.953241934867921e-05, 64.9: 6.0480226047153994e-05, 65.0: 6.143330150147879e-05, 65.1: 6.23916085977132e-05, 65.2: 6.33551096023673e-05, 65.3: 6.432376616242498e-05}

variable_last_trams: {'stepper_z': 0, 'stepper_z1': 0, 'stepper_z2': 0, 'stepper_z3': 0}
variable_z_trams_temps: {'stepper_z': {}, 'stepper_z1': {}, 'stepper_z2': {}, 'stepper_z3': {}}
variable_enable_tram: 0

variable_temp_min: 27.5
variable_temp_max: 65.3
variable_step: 0.1
variable_precision: 1


############################ DO NOT CHANGE ANYTHING BELOW UNLESS YOU KNOW WHAT YOU ARE DOING ####################################
variable_enable: 1
variable_thermistor_name: "z_thermal_adjust"
variable_last_temp: 0
variable_last_temp_range: []
gcode:
    {% set current_temp = params.CURRENT_TEMP|float %}
    {% set ref_temp = params.REF_TEMP|float %}

    {% set precision = printer["gcode_macro _FDC"].precision %}
    {% set step = printer["gcode_macro _FDC"].step %}

    {% set temp_min = printer["gcode_macro _FDC"].temp_min %}
    {% set temp_max = printer["gcode_macro _FDC"].temp_max %}

    {% if temp_min <= ref_temp <= temp_max and temp_min <= current_temp <= temp_max and current_temp != ref_temp %}
        {% set range_start = (ref_temp * (10 ** precision))|int %}
        {% set range_end = (current_temp * (10 ** precision))|int %}
        {% set range_step = (step * (10 ** precision))|int %}

        {% if range_start > range_end %}
            {% set range_step = range_step * -1 %}
        {% endif %}

        {% set temp_range = namespace(value=[]) %}
        {% for i in range(range_start,range_end + range_step, range_step) %}
            # This is how you append to a list in jinja2 with a namespace...yes...
            {% set temp_range.value = temp_range.value + [i / (10**precision)] %}
        {% endfor %}

        # note to self: can't have a space between the var and value (i.e Malformed command)
        # also for complex types like list and dict you need quotes
        SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=last_temp VALUE={current_temp}
        SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=last_temp_range VALUE="{temp_range.value}"

        {% if printer["gcode_macro _FDC"].enable_tram %}
            _TILT_AND_LOAD_MESH CURRENT_TEMP={current_temp} REF_TEMP={ref_temp}
        {% else %}
            BED_MESH_PROFILE LOAD={current_temp}
            _Z_HEIGHT_ADJUST CURRENT_TEMP={current_temp} REF_TEMP={ref_temp}
        {% endif %}

    {% elif ref_temp != 0 and (ref_temp > temp_max or ref_temp < temp_min) %}
        { action_raise_error("ref_temp or current_temp is out of range "~ref_temp~", "~current_temp) }

    {% endif %}

[gcode_macro _Z_HEIGHT_ADJUST]
variable_last_coeff: 0
gcode:
    {% set total_mm= namespace(value=0) %}
    {% set temp_coeff = namespace(value=0) %}

    {% for temp in printer["gcode_macro _FDC"].last_temp_range %}
        {% set total_mm.value = total_mm.value + printer["gcode_macro _FDC"].z_height_temps[temp|float] %}
    {% endfor %}

    # we take the temp diff abs because the z_thermal_adjust will handle the signs
    # the temp_coeff should be low temp to high temp, it will handle the reverse
    {% set temp_coeff.value = total_mm.value / (params.CURRENT_TEMP|float - params.REF_TEMP|float)|abs %}

    #there is a bug in the comparison of this two floats
    #coudln't for the life of me understand why, so I compare them as strings
    {% if last_coeff|string != temp_coeff.value|string %}
        SET_GCODE_VARIABLE MACRO=_Z_HEIGHT_ADJUST VARIABLE=last_coeff VALUE={temp_coeff.value}
        SET_Z_THERMAL_ADJUST TEMP_COEFF={ temp_coeff.value }
    {% endif %}


[gcode_macro _TILT_AND_LOAD_MESH]
gcode:
    {% if printer["gcode_macro _FDC"].enable_tram %}
        {% if ('applied' in printer.quad_gantry_level and printer.quad_gantry_level.applied) or ('applied' in printer.z_tilt and printer.z_tilt.applied) %}
            {% set current_temp = params.CURRENT_TEMP|float %}
            {% set ref_temp = params.REF_TEMP|float %}

            {% set total_mm= namespace() %}
            {% set total_mm.sign= 1 %}
            {% set total_mm.value= dict() %}
            {% set total_mm.diff= dict() %}
            {% set total_mm.macro_string= "" %}

            {% if current_temp < ref_temp %}
                # If temps are going up we also need to flip the sign
                # to un-tilt the bed mesh (from a the flat position to the reverse tilt position)
                {% set total_mm.sign=-1 %}
            {% endif %}

            {% for stepper, offset in printer["gcode_macro _FDC"].z_trams_temps.items() %}
                {% set _=total_mm.value.__setitem__(stepper, 0) %}
                {% for temp in printer["gcode_macro _FDC"].last_temp_range %}
                    # This is how you set and add an item to a dict in jinja2 with a namespace...yes...
                    {% set _=total_mm.value.__setitem__(stepper,total_mm.value.__getitem__(stepper) + offset[temp|float]) %}
                {% endfor %}
                {% set _=total_mm.value.__setitem__(stepper, total_mm.value.__getitem__(stepper) * total_mm.sign) %}

                # Subtract from the ref temp offset
                # We need to subtract it because this is Z=0 for all steppers
                #{% set _=total_mm.diff.__setitem__(stepper, total_mm.value.__getitem__(stepper) - offset[ref_temp]) %}
            {% endfor %}

            SET_GCODE_VARIABLE MACRO=_FDC variable=last_trams value="{total_mm.value}"

            {% for stepper, stepper_total_mm in total_mm.value.items() %}
                {% set total_mm.macro_string=total_mm.macro_string ~ stepper ~ '=' ~ stepper_total_mm  ~ ' ' %}
            {% endfor %}
            # { action_respond_info("TILT_AND_LOAD String %s" % (total_mm.macro_string)) }
            BED_MESH_PROFILE TILT_AND_LOAD={current_temp} CURRENT_TEMP={current_temp} REF_TEMP={ref_temp} {total_mm.macro_string}
        {% else %}
             {action_respond_info("Tram enabled but the bed is not trammed!")}
        {% endif %}
    {% else %}
         {action_respond_info("TILT_AND_LOAD_MESH called but it's not enabled")}
    {% endif %}


[delayed_gcode RUN_FDC]
initial_duration: 1
gcode:
  {% if printer["gcode_macro _FDC"].temp_min|float == 0.0 or printer["gcode_macro _FDC"].temp_max|float == 999.9  %}
    { action_respond_info("FDC disabled: Stock temperature values present! Modify the config to reflect your own values and restart!") }

  {% elif printer["gcode_macro _FDC"].z_height_temps.999 is defined and printer["gcode_macro _FDC"].z_height_temps.0 == 999 %}
    { action_respond_info("FDC disabled: Stock z heights values present! Modify the config to reflect your own values and restart!") }

  {% elif printer["gcode_macro _FDC"].enable_tram and 'z_tilt' in printer and printer["gcode_macro _FDC"].z_trams_temps.keys()|length != 3 %}
    { action_respond_info("FDC disabled: z_tilt require 3 z steppers to be defined in variable_z_trams_temps!") }

  {% elif printer["gcode_macro _FDC"].enable_tram and 'quad_gantry_level' in printer and printer["gcode_macro _FDC"].z_trams_temps.keys()|length != 4 %}
    { action_respond_info("FDC disabled: quad_gantry_level require 4 z steppers to be defined in variable_z_trams_temps!") }

  {% elif printer["gcode_macro _FDC"].enable_tram and 'z_tilt' in printer and printer["gcode_macro _FDC"].last_trams.keys()|length != 3 %}
    { action_respond_info("FDC disabled: z_tilt require 3 z steppers to be defined variable_last_trams(init to zero)!") }

  {% elif printer["gcode_macro _FDC"].enable_tram and 'quad_gantry_level' in printer and printer["gcode_macro _FDC"].last_trams.keys()|length != 4 %}
    { action_respond_info("FDC disabled: quad_gantry_level require 4 z steppers to be defined in variable_last_trams(init to zero)!") }

  {% else %}
    UPDATE_DELAYED_GCODE ID=RUN_FDC DURATION=10
    {% if printer["gcode_macro _FDC"].enable %}
        {% set precision = printer["gcode_macro _FDC"].precision %}
        {% set step = printer["gcode_macro _FDC"].step %}

        # Rounding current_temp and ref_temp to the step with precision in order to not be affected by small changes
        # This will also improve temp_coeff fluctuation
        {% set ref_temp = printer.z_thermal_adjust.z_adjust_ref_temperature %}
        {% set ref_temp=(ref_temp / step)|round(0) %}
        {% set ref_temp=(ref_temp * step)|round(precision) %}

        {% set current_temp = printer[printer["gcode_macro _FDC"].thermistor_name].temperature|float %}
        {% set current_temp=(current_temp / step)|round(0) %}
        {% set current_temp=(current_temp * step)|round(precision) %}

        {% set last_temp = printer["gcode_macro _FDC"].last_temp %}

        #change the mesh only if it's needed, we don't want to spam klipper with gcodes
        {% if printer.virtual_sdcard.is_active == True and last_temp != current_temp %}
            _FDC CURRENT_TEMP={current_temp} REF_TEMP={ref_temp}
        {% elif printer.virtual_sdcard.is_active == False and last_temp != 0 %}
            {% set last_temp_range_empty=[] %}
            {% set total_mm= namespace() %}
            {% set total_mm.value= dict() %}
            {% for stepper, offset in printer["gcode_macro _FDC"].z_trams_temps.items() %}
                {% set _=total_mm.value.__setitem__(stepper, 0) %}
            {% endfor %}
            # reset the state vars
            SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=last_temp VALUE=0
            SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=last_temp_range VALUE="{last_temp_range_empty}"
            SET_GCODE_VARIABLE MACRO=_FDC variable=last_trams value="{total_mm.value}"
            { action_respond_info("FDC: Resting state vars!\nlast_temp: %s to: %s\nlast_temp_range: %s to: %s\nlast_trams: %s to: %s" % (last_temp, 0, printer["gcode_macro _FDC"].last_temp_range, last_temp_range_empty, printer["gcode_macro _FDC"].last_trams, total_mm.value)) }
        {% endif %}
    {% endif %}
  {% endif %}

[gcode_macro SET_FDC]
gcode:
    #get current state if not provided by params
    {% set ENABLE = params.ENABLE|default(printer["gcode_macro _FDC"].enable)|string %}
    #input checks
    {% if ENABLE == "0" or ENABLE == "1" %}
      {% set enabled = printer["gcode_macro _FDC"].enable %} #current enable status

      {% if not enabled|int == ENABLE|int %}
        SET_GCODE_VARIABLE MACRO=_FDC VARIABLE=enable VALUE={ENABLE}
      {% endif %}
      QUERY_FDC
    {% else %}
      { action_respond_info("Invalid parameter ENABLE value '%s' - must be 0 or 1" % (ENABLE|int)) }
    {% endif %}

[gcode_macro QUERY_FDC]
gcode:
    {% set enabled = printer["gcode_macro _FDC"].enable %}
    {% set last_temp = printer["gcode_macro _FDC"].last_temp %}
    {% set current_mesh = printer.bed_mesh.profile_name %}
    {% set current_temp_coeff = printer["gcode_macro _FDC"].last_coeff %}
    {% set current_last_trams = printer["gcode_macro _FDC"].last_trams %}
    {% set current_z_adjust = printer.z_thermal_adjust.current_z_adjust %}
    {% set ref_temp = printer.z_thermal_adjust.z_adjust_ref_temperature %}
    { action_respond_info("FDC: \n Enabled: %s \n Last temp: %s C \n Mesh profile loaded: %s \n current temp coeff: %s \n current last trams: %s \n current z adjust: %s \n ref_temp: %s" % (enabled, last_temp, current_mesh, current_temp_coeff, current_last_trams, current_z_adjust, ref_temp)) }
