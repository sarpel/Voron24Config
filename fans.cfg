#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - FAN0 Connector
##  Uncomment below for SpiderVersion 1.x
#pin: PB0
##  Uncomment below for SpiderVersion 2.2
#pin: PA13
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0
max_power: 1.0
kick_start_time: 0.5
tachometer_pin: ^EBBCan: PB4
#   Tachometer input pin for monitoring fan speed. A pullup is generally
#   required. This parameter is optional.
tachometer_ppr: 2
#   When tachometer_pin is specified, this is the number of pulses per
#   revolution of the tachometer signal. For a BLDC fan this is
#   normally half the number of poles. The default is 2.
tachometer_poll_interval: 0.001
#   When tachometer_pin is specified, this is the polling period of the
#   tachometer pin, in seconds. The default is 0.0015, which is fast
#   enough for fans below 10000 RPM at 2 PPR. This must be smaller than
#   30/(tachometer_ppr*rpm), with some margin, where rpm is the
#   maximum speed (in RPM) of the fan.
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - FAN1 Connector
##  Uncomment below for SpiderVersion 1.x
#pin: PB1
##  Uncomment below for SpiderVersion 2.2
#pin: PA1 #WS7040
pin: EBBCan: PA1
hardware_pwm: False
#cycle_time: 0.005 #ws7040
#cycle_time: 0.005
cycle_time: 0.010
max_power: 1.0
#kick_start_time: 0.25 #ws7040
kick_start_time: 0.1
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
#off_below: 0.11
off_below: 0.0

[fan_generic electronics_circulation_fan]
##	Controller fan - FAN2 Connector
pin: PB2
max_power: 0.5
kick_start_time: 1
#stepper: stepper_z, stepper_z1, stepper_z2, stepper_z3, stepper_x, stepper_y
#idle_timeout: 60
#idle_speed: 0.33

#[heater_fan exhaust_fan]
##  Exhaust fan - In E2 OUT Positon
#pin: PB3
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 15.0
#heater: heater_bed
#heater_temp: 80
#fan_speed: 1.0

[fan_generic sub_bed_fan]
pin: PB15
max_power: 1.0
#cycle_time: 0.05
kick_start_time: 1
#[output_pin BedFans]
#pin: PB15
#value: 0
#shutdown_value: 0

#[controller_fan nevermore]
# Nevermore - In E1 OUT Position
#pin: PC8
#kick_start_time: 0.500
#fan_speed: 0.5

[controller_fan 2209_stepper_fan]
pin: PA14
max_power: 1.0
#cycle_time: 0.010
#hardware_pwm: False
kick_start_time: 1
stepper: stepper_z, stepper_z1, stepper_z2, stepper_z3, stepper_x, stepper_y
idle_timeout: 60
idle_speed: 0.33

#[controller_fan 5160_stepper_fan]
#pin: PA13
#max_power: 1.0
##cycle_time: 0.010
##hardware_pwm: False
#kick_start_time: 1
#stepper: stepper_x, stepper_y
#idle_timeout: 60
#idle_speed: 0.33

#[delayed_gcode ON_FAN_START]
#initial_duration: 1
#gcode:
#        SET_FAN_SPEED FAN=electronics_circulation_fan SPEED=0.33

#####################################################################
#  Macros
#####################################################################
# M106 with lock and manual set feature
# M106 S128 M1 will update the fan in any case

#[gcode_macro M106]
#description: set fan with manual override and lock option
#rename_existing: M106.1
#gcode:
#  {% if printer['output_pin lock_M106'].value|int == 0 or params.M|default(0) == '1' %}
#    M106.1 {rawparams}
#  {% else %}
#    {action_respond_info("M106 update is locked")}
#  {% endif %}
  
#[gcode_macro M141]
#description: Set temperature of chamber fan
#gcode: SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={params.S|default(0)}
    
#[gcode_macro _SET_FILTER]
#description: Helper: Set The filter speed
#gcode: SET_FAN_SPEED FAN=sub_bed_fan SPEED={params.S|default(0)}