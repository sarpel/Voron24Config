# This macro was provided by discord user Garrettwp to whom i give my thanks for sharing it with me.
# I have tweaked it a lot.
# They are based on the great Annex magprobe dockable probe macros "#Originally developed by Mental,
# modified for better use on K-series printers by RyanG and Trails", kudos to them.
# That macro as since evolved into a klipper plugin that currently is pending inclusion in klipper, 
# more information here, https://github.com/Annex-Engineering/Quickdraw_Probe/tree/main/Klipper_Macros
# User richardjm revised the macro variables and added some functions, thanks a lot
# by standing on the shoulders of giants, lets see if we can see further
#
# the current home for this version is https://github.com/jlas1/Klicky-Probe 

[bed_mesh]
speed: 350
#horizontal_move_z: 5 #TAP
horizontal_move_z: 12 #klicky_pcb
#horizontal_move_z: 8
##--------------------------------------------------------------------
##	Uncomment for 300mm build
mesh_min: 60, 60
mesh_max: 240,240
#mesh_min: 60, 60
#mesh_max: 240,240
##--------------------------------------------------------------------
#fade_start: 0.6
#fade_end: 10.0
fade_end: 0
#probe_count: 5,5 # Values should be odd, so one point is directly at bed center
probe_count: 5, 5
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: 0.2
zero_reference_position: 150,115
#relative_reference_index: 12 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)
#relative_reference_index: 40

###################
# Bed mesh calibrate
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
description: Perform Mesh Bed Leveling with klicky automount
gcode:
    {% set V = printer["gcode_macro _User_Variables"].verbose %}
    {% if V %}
        { action_respond_info("Bed Mesh Calibrate") }
    {% endif %}

    _CheckProbe action=query
	G90
    Attach_Probe
    _KLICKY_STATUS_MESHING

    _BED_MESH_CALIBRATE {% for p in params
           %}{'%s=%s ' % (p, params[p])}{%
          endfor %}

    Dock_Probe
